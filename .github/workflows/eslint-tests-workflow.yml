name: Aquila Code Quality & Test Coverage Analysis

on:
  push:
    branches:
      - develop
      - main
      - release
  pull_request:
    branches:
      - develop
      - main
      - release
    types:
      - ready_for_review

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.11.0"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint

  unit_tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.11.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage-unitary
          path: ./coverage-unitary/lcov.info

  integration_tests:
    runs-on: ubuntu-latest
    needs: unit_tests
    services:
      docker:
        image: docker:20.10.8-dind
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.11.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Integration Tests
        run: npm run test:integration

      - name: Upload integration test coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage-integration
          path: ./coverage-integration/lcov.info

  sonar:
    runs-on: ubuntu-latest
    needs: integration_tests
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.11.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Download unit test coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage-unitary
          path: ./coverage-unitary

      - name: Download integration test coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage-integration
          path: ./coverage-integration

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_KEY }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
        run: |
          npx sonarqube-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.sources=src \
            -Dsonar.tests=__tests__ \
            -Dsonar.javascript.lcov.reportPaths=coverage-integration/lcov.info,coverage-unitary/lcov.info \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
